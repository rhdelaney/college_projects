; (define (cond2if f)
;   (println f)
; )
; (define (if2cond f)
;   (println f)
; )
; (define (main)
;   (setPort (open (getElement ScamArgs 1) 'read))
;   (if2cond (readExpr))
;   (cond2if (readExpr))
; )
(define (main)
    (setPort (open (getElement ScamArgs 1) 'read))
    (println (if2cond (readExpr)))
    (println (cond2if (readExpr)))
)


(define (if2cond x)
    (if (and (not (atom? x)) (= (length x) 4) (equal? (car x) 'if))
        (list 'cond (list (if2cond (getElement x 1))
                          (if2cond (getElement x 2)))
                          (list 'else (if2cond (getElement x 3)))
                          )
        (if (null? x)
            (list x)
            x
            )
        )
    )


(define (cond2if x)
    (if (and (not (atom? x)) (> (length x) 1))
        (cond
            ((and (< 1 (length (getElement x 1))) (equal? (car (getElement x 1)) 'else))
                (cond2if (getElement (getElement x 1) 1))
            )
            ((equal? (car x) 'cond)
                (list 'if (cond2if (car (getElement x 1)))
                          (cond2if (getElement (getElement x 1) 1))
                          (cond2if (cons 'cond (cddr x)))
                          )
                )
            (else x)
        )
        (if (null? x)
            (list x)
            x
            )
        )
    )