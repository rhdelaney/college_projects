(define (add a b)
  (lambda (f)
    (lambda (x)
      ; use the result of b as the base for a
      ((a f)((b f) x))
      )
    )
  )
(define (multiply a b)
  (lambda (f)
    (lambda (x)
      ((a (b f)) x)
      )
    )
  )
(define (increment number)
  (lambda (incrementer)
    (define (resolver base)
      (incrementer ((number incrementer) base))
      )
    resolver
  )
)
(define (main)
  (setPort (open (getElement ScamArgs 1) 'read))
  (eval (readExpr) this)
  (eval (readExpr) this)
  (eval (readExpr) this)
  (eval (readExpr) this)
   (println (((add num1 num2) inc) base) )
   (println (((multiply num1 num2) inc) base) )
   ;(((increment (lambda (f) (lambda (x) (f (f (f x)))))) (lambda (x) (+ 1 x))) 0)
)