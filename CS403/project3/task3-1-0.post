
(define (lusth-comp a b) 
    (> (string-compare a b) 0)
    )
(define (lusth-eq a b)
    (equal? a b)
    )
(println "creating the tree")
(define t (bst lusth-comp))
(println "doing a bunch of inserts")
(t 'insert "ibsr" 10)
(t 'insert "gyhi" 9)
(t 'insert "vxav" 8)
(t 'insert "wcrz" 7)
(t 'insert "umdu" 6)
(t 'insert "kxeg" 5)
(t 'insert "ecvq" 4)
(t 'insert "ldpt" 3)
(t 'insert "pteh" 2)
(t 'insert "hwrl" 1)
(inspect (t 'size))
(inspect (t 'walk))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'find "pteh" lusth-eq))
(inspect (t 'find "ecvq" lusth-eq))
(inspect (t 'find "zfpb" lusth-eq))
(inspect (t 'find "drpa" lusth-eq))
(inspect (t 'find "gyhi" lusth-eq))
(inspect (t 'find "vdgd" lusth-eq))
(inspect (t 'find "gclr" lusth-eq))
(t 'delete "hwrl" lusth-eq)
(t 'delete "ecvq" lusth-eq)
(t 'delete "kxeg" lusth-eq)
(inspect (t 'walk))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'next))
(inspect (t 'find "hwrl" lusth-eq))
(inspect (t 'find "ldpt" lusth-eq))
(inspect (t 'find "umdu" lusth-eq))
(inspect (t 'find "xhwu" lusth-eq))
(inspect (t 'find "wadf" lusth-eq))
(inspect (t 'find "iegc" lusth-eq))
(inspect (t 'find "roir" lusth-eq))
